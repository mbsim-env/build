name: CI msys2 (Repo-Dispatch)
on:
  push:
env:
  MSYSTEM: UCRT64 # use the msys2 UCRT64 environment
  HOME: d:\myhome # use d:\myhome as msys2 home dir
  CCACHE_DIR: c:\myhome\ccache
  # set the CPU type for OpenBLAS to avoid CPU dependent results (e.g. with/without AVX512)
  OPENBLAS_CORETYPE: Haswell
  # tagname and servername of remote mbsimenv server
  MBSIMENVSERVERNAME: www.mbsim-env.de
  # connect to this server:port for www, database and filestorage
  MBSIMENVDATABASE: www.mbsim-env.de:5432
  MBSIMENVFILESTORAGE: www.mbsim-env.de:1122
  # get secrets
#  mbsimenvsec_githubAccessToken: ${{secrets.githubAccessToken}} not provided for now to avoid adding git commit statuses
  mbsimenvsec_djangoSecretKey: ${{secrets.djangoSecretKey}}
  mbsimenvsec_postgresPassword: ${{secrets.postgresPassword}}
  mbsimenvsec_filestoragePassword: ${{secrets.filestoragePassword}}
  GH_TOKEN: ${{github.token}} # needed for gh-actions-cache
jobs:
  build:
    name: "win64-ci-msys2"
    runs-on: windows-latest
    defaults:
      run:
        shell: C:\msys64\usr\bin\bash.exe -l {0}
    steps:
      - name: "Init msys2 (and install procps needed for free command)"
        run: pacman --noconfirm -S procps
      - name: "Dump resources"
        run: echo ***df*** && df && echo ***free*** && free && echo ***cpu*** && grep -m 1 "model name" /proc/cpuinfo && grep -e processor -e "pyhsical id" -e siblings -e "core id" /proc/cpuinfo | sed -e 's|$|; |' | tr '\n' ' ' | sed -re "s+;  processor+\nprocessor+g" && echo


      - name: "mfmf"
        run: choco install procmon
      - shell: cmd
        run: Procmon.exe /AcceptEula /quiet /minimized /backingfile c:\out.pml
      - shell: cmd
        run: Procmon.exe /waitforidle
      - run: echo DUMMYRUN
      - shell: cmd
        run: Procmon.exe /terminate
      - uses: actions/upload-artifact@v3
        with:
          name: procmon
          retention-days: 1
          path: c:\out.pml


      - name: "Update msys2 part 1"
        # this may update msys2-runtime which closed also the current bash -> run in a cmd
        shell: cmd
        run: C:\msys64\usr\bin\pacman.exe --noconfirm -Syuu
      - name: "Update msys2 part 2"
        run: pacman --noconfirm -Syuu
      - name: "Install msys2 packages and cleanup"
        run: >
          pacman --noconfirm -S
          dos2unix
          patch
          mingw-w64-ucrt-x86_64-arpack
          mingw-w64-ucrt-x86_64-autotools
          mingw-w64-ucrt-x86_64-boost
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-doxygen
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-graphviz
          mingw-w64-ucrt-x86_64-hdf5
          mingw-w64-ucrt-x86_64-octave
          mingw-w64-ucrt-x86_64-openblas
          mingw-w64-ucrt-x86_64-7zip
          mingw-w64-ucrt-x86_64-python-numpy
          mingw-w64-ucrt-x86_64-python-sympy
          mingw-w64-ucrt-x86_64-python-h5py
          mingw-w64-ucrt-x86_64-python-psutil
          mingw-w64-ucrt-x86_64-python-psycopg2
          mingw-w64-ucrt-x86_64-python-pygithub
          mingw-w64-ucrt-x86_64-python-paramiko
          mingw-w64-ucrt-x86_64-qwt-qt5
          mingw-w64-ucrt-x86_64-diffutils
          mingw-w64-ucrt-x86_64-soqt-qt5
          mingw-w64-ucrt-x86_64-spooles
          mingw-w64-ucrt-x86_64-swig
          mingw-w64-ucrt-x86_64-xalan-c
          mingw-w64-ucrt-x86_64-xerces-c
          mingw-w64-ucrt-x86_64-ccache
          mingw-w64-ucrt-x86_64-python-pip
          mingw-w64-ucrt-x86_64-python-asgiref
          mingw-w64-ucrt-x86_64-python-pytz
          mingw-w64-ucrt-x86_64-python-sqlparse
          mingw-w64-ucrt-x86_64-python-requests
          mingw-w64-ucrt-x86_64-python-pyjwt
          mingw-w64-ucrt-x86_64-python-cryptography
          mingw-w64-ucrt-x86_64-python-cffi
          mingw-w64-ucrt-x86_64-python-defusedxml
          mingw-w64-ucrt-x86_64-python-oauthlib
          mingw-w64-ucrt-x86_64-python-requests-oauthlib &&
          pacman --noconfirm -Scc
      - name: "Install mesa for software OpenGL (only needed to run GUI programs in VMs)"
        run: >
          mkdir mesa && cd mesa &&
          wget --no-verbose https://github.com/pal1000/mesa-dist-win/releases/download/23.1.9/mesa3d-23.1.9-release-msvc.7z &&
          7z x mesa3d-23.1.9-release-msvc.7z &&
          cmd //c systemwidedeploy.cmd 1 &&
          cd .. && rm -rf mesa
      - name: "Install pip packages"
        run: pip install --upgrade pip && pip install django==3.2 django-allauth==0.47 django-octicons==1.0
      - name: "Add git and gh to msys2 path"
        run: echo 'PATH="$PATH:/c/Program Files/Git/bin:/c/Program Files/GitHub CLI"' >> ~/.bash_profile
      - name: "Clone all git repos"
        run: >
          git clone -q --depth 1 https://github.com/mbsim-env/build.git &&
          git clone -q --depth 1 https://github.com/mbsim-env/fmatvec.git &&
          git clone -q --depth 1 https://github.com/mbsim-env/hdf5serie.git &&
          git clone -q --depth 1 https://github.com/mbsim-env/openmbv.git &&
          git clone -q --depth 1 https://github.com/mbsim-env/mbsim.git
      - name: "patch swig"
        run: cd /ucrt64/share/swig/4.1.1 && patch -p2 < $HOME/build/msys2ucrt64Build/swig.git.patch
      - name: "Create build UUID"
        shell: python
        id: matrixUUID
        run: |
          import uuid
          print("jobs.build.steps.matrixUUID.outputs.matrixUUID:\n"+str(uuid.uuid4()))
          with open(r"${{github.output}}", "at") as o:
            print("matrixUUID="+str(uuid.uuid4()), file=o)
      - name: "Cache restore: ccache"
        uses: actions/cache/restore@v3
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-msys2ucrt64--${{steps.matrixUUID.outputs.matrixUUID}}
          restore-keys: |
            ccache-msys2ucrt64--
      - name: "Set ccache size and zeroing ccache statistics"
        run: ccache -M 5G && ccache -z
      - name: "Start build.sh"
        run: ./build/msys2ucrt64Build/build.sh --buildSystemRun --executor '<a class="MBSIMENV_EXECUTOR_GITHUBACTION" href="https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}/attempts/${{github.run_attempt}}">GitHub Actions</a>'
      - name: "Dump link to MBSim-Env server"
        if: ${{always()}}
        shell: python
        run: |
          import json
          try:
            with open("${{env.HOME}}/local-msys2ucrt64/.buildInfo.json", "r") as f:
              buildInfo=json.load(f)
          except:
            print("No buildInfo file found")
          else:
            print("https://${{env.MBSIMENVSERVERNAME}}/builds/run/"+str(buildInfo["buildRunID"])+"/")
      - name: "Dump ccache statistics"
        if: ${{always()}}
        run: ccache -s
      - name: "Cache save: ccache"
        if: ${{always()}}
        uses: actions/cache/save@v3
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-msys2ucrt64--${{steps.matrixUUID.outputs.matrixUUID}}
      - name: "Cache remove-old: ccache"
        if: ${{always()}}
        run: >
          gh extension install actions/gh-actions-cache &&
          KEYS=$(gh actions-cache list --key ccache-msys2ucrt64-- --order desc --sort created-at --repo ${{github.repository}} --branch ${{github.ref_name}} | tail -n +2 | cut -f1) &&
          for KEY in $KEYS; do gh actions-cache delete $KEY --confirm --repo ${{github.repository}} --branch ${{github.ref_name}}; done
      - name: "Dump resources"
        if: ${{always()}}
        run: echo ***df*** && df && echo ***free*** && free && echo ***cpu*** && grep -m 1 "model name" /proc/cpuinfo && grep -e processor -e "pyhsical id" -e siblings -e "core id" /proc/cpuinfo | sed -e 's|$|; |' | tr '\n' ' ' | sed -re "s+;  processor+\nprocessor+g" && echo
