name: Branch Combi Added (Repo-Dispatch)
on:
  repository_dispatch:
    types: [branchCombiAdded]
env:
  # tagname and servername of remote mbsimenv server
  MBSIMENVTAGNAME: latest
  MBSIMENVSERVERNAME: www.mbsim-env.de
  # connect to this server:port for www, database and filestorage
  MBSIMENVWWW: www.mbsim-env.de:443
  MBSIMENVDATABASE: www.mbsim-env.de:5432
  MBSIMENVFILESTORAGE: www.mbsim-env.de:1122
  # get secrets
  mbsimenvsec_githubAccessToken: ${{secrets.githubAccessToken}}
  mbsimenvsec_mbsimenvAccessToken: ${{secrets.mbsimenvAccessToken}}
  mbsimenvsec_djangoSecretKey: ${{secrets.djangoSecretKey}}
  mbsimenvsec_postgresPassword: ${{secrets.postgresPassword}}
  mbsimenvsec_filestoragePassword: ${{secrets.filestoragePassword}}
jobs:



  buildNewCIBranchCombi:
    name: B&e
    uses: ./.github/workflows/mbsim-env-build.yml
    if: ${{github.event.client_payload.model=='CIBranches'}}
    with:
      matrix: |
        {"data":
          [{
            "branches": ${{toJson(github.event.client_payload.branches)}},
            "os":
              {"buildType": "linux64-ci", "image": "mbsimenv/build", "runsOn": "ubuntu-22.04", "mountBase": "", "args": "--ccacheSize 0.63"}
          }, {
            "branches": ${{toJson(github.event.client_payload.branches)}},
            "os":
              {"buildType": "win64-ci", "image": "mbsimenv/buildwin64", "runsOn": "ubuntu-22.04", "mountBase": "", "args": "--ccacheSize 4.25"}
          }, {
            "branches": ${{toJson(github.event.client_payload.branches)}},
            "os":
              {"buildType": "msys2win64-ci", "image": "mbsimenv/buildmsys2ucrt64", "runsOn": "windows-2019", "mountBase": "c:/msys64", "args": "--ccacheSize 0.63"}
          }]
        }
      uploadArtifactLocalLcov: false
    secrets:
      githubAccessToken: ${{secrets.githubAccessToken}}
      mbsimenvAccessToken: ${{secrets.mbsimenvAccessToken}}
      djangoSecretKey: ${{secrets.djangoSecretKey}}
      postgresPassword: ${{secrets.postgresPassword}}
      filestoragePassword: ${{secrets.filestoragePassword}}



#  buildNewDailyBranchCombi:
#    name: B&e
#    uses: ./.github/workflows/mbsim-env-build.yml
#    if: ${{github.event.client_payload.model=='DailyBranches'}}
#    with:
#      matrix: |
#        {"data":
#          [{
#            "branches": ${{toJson(github.event.client_payload.branches)}},
#            "os":
#              {"buildType": "linux64-dailydebug", "image": "mbsimenv/build", "runsOn": "ubuntu-22.04", "mountBase": "", "args": "--ccacheSize 0.69"}
#          }, {
#            "branches": ${{toJson(github.event.client_payload.branches)}},
#            "os":
#              {"buildType": "linux64-dailyrelease", "image": "mbsimenv/build", "runsOn": "ubuntu-22.04", "mountBase": "", "args": "--ccacheSize 0.73"}
#          }, {
#            "branches": ${{toJson(github.event.client_payload.branches)}},
#            "os":
#              {"buildType": "win64-dailyrelease", "image": "mbsimenv/buildwin64", "runsOn": "ubuntu-22.04", "mountBase": "", "args": "--ccacheSize 4.38"}
#          }, {
#            "branches": ${{toJson(github.event.client_payload.branches)}},
#            "os":
#              {"buildType": "msys2win64-dailyrelease", "image": "mbsimenv/buildmsys2ucrt64", "runsOn": "windows-2019", "mountBase": "c:/msys64", "args": "--ccacheSize 0.75"}
#          }]
#        }
#      uploadArtifactLocalLcov: false
#    secrets:
#      githubAccessToken: ${{secrets.githubAccessToken}}
#      mbsimenvAccessToken: ${{secrets.mbsimenvAccessToken}}
#      djangoSecretKey: ${{secrets.djangoSecretKey}}
#      postgresPassword: ${{secrets.postgresPassword}}
#      filestoragePassword: ${{secrets.filestoragePassword}}
