#!/bin/bash

# base variables
BASENAME=$(basename $0)
DIRNAME=$(dirname $0)

if [ "$BASENAME" == "mbsbd" ]; then
  # direct run (not via a link)

  SCRIPTDIR=$(readlink -f $DIRNAME)
  MBSIMENVDIR=$(readlink -f "$SCRIPTDIR"/../../..)
  
  # help
  if [ $# -le 0 ]; then
    echo "This script runs the command provided as first argument in the mbsimenv/buildwin64 Docker image."
    echo "All other arguments are passed to the command running in Docker."
    echo "If this script is started via a symbolic link to it, then the name of the program to run is"
    echo "the name of link and all arguments are passed."
    echo "Examples:"
    echo "$ <path>/mbsbd make - runs make in the Docker directory corresponding to the current directory."
    echo "$ <path>/mbsbd mbsimxml MBS.mbsimprj.xml - runs the MBSim XML model MBS.mbsimprj.xml in the Docker"
    echo "                                           directory corresponding to the current directory."
    echo "..."
    exit 0
  fi
  
  # check docker
  if ! docker version > /dev/null; then
    echo 'Cannot run docker. Please install and enable docker as the current user or'
    echo '(not recommended) run this script as root.'
  fi

  TAGNAME=${TAGNAME:-latest}
  
  # convert the absolute path stored in PABS to the corresponding docker path
  function convertPABS {
    PCANO=$(readlink -m $PABS)
    if [ "${PCANO:0:${#MBSIMENVDIR}}" == "$MBSIMENVDIR" ]; then
      PABS=/mbsim-env${PCANO:${#MBSIMENVDIR}}
    else
      echo "ERROR: The path $PABS is not a subdir of $MBSIMENVDIR. This cannot be handled by $BASENAME."
      echo "If you mean a native path in the Docker image prefix this argument with DOCKERDIR:"
      exit 1
    fi
  }
  
  # convert cur dir
  PABS=$PWD; convertPABS; CURDIR=$PABS
  
  #convert args
  ARGS=()

  # special fix for runexamples.py
  if [ "_$(basename $1)" == "_runexamples.py" ]; then
    ARGS+=("$1")
    ARGS+=("--exeExt=.exe")
    shift
  fi

  while [ $# -ge 1 ]; do
    if [ "${1:0:1}" == "/" ]; then
      # convert absolute path
      PABS=$1; convertPABS
      ARGS+=("$PABS")
    elif [ "${1:0:10}" == "DOCKERDIR:" ]; then
      ARGS+=("${1:10}")
    else
      # keep everything else
      ARGS+=("$1")
    fi
    shift
  done
  
  # run in mbsimenv/build docker image
  # We need to change WINEPATH since we use a different local dir in "user" builds compared to "auto" builds
  exePrefix=""
  test ${ARGS: -4} == ".exe" && exePrefix=wine
  docker run --init --entrypoint= --rm \
    --user $(id -u):$(id -g) \
    -v "$MBSIMENVDIR":/mbsim-env \
    -v "$MBSIMENVDIR/.ccache":/mbsim-ccache \
    -v "$MBSIMENVDIR/.home":/tmp/home \
    -e HOME=/tmp/home \
    -e PATH="/mbsim-env/mbsim/examples:/usr/lib64/ccache:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" \
    -e WINEPATH="/usr/x86_64-w64-mingw32/sys-root/mingw/bin;/3rdparty/local/bin;/3rdparty/local/lib;/3rdparty/local/python-win64;/3rdparty/local/python-win64/Lib/site-packages/numpy/core;/usr/lib64/wine/fakedlls;/mbsim-env/local-dockerwin64/bin" \
    -e PKG_CONFIG_PATH="/3rdparty/local/lib/pkgconfig:/3rdparty/local/lib64/pkgconfig:/mbsim-env/local-dockerwin64/lib/pkgconfig:/mbsim-env/local-dockerwin64/lib64/pkgconfig" \
    -w "$CURDIR" \
    -e DISPLAY \
    -v ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority \
    --net=host \
    mbsimenv/buildwin64:$TAGNAME \
    $exePrefix "${ARGS[@]}"

else
  # run via a link

  $DIRNAME/mbsbd $BASENAME "$@"

fi
