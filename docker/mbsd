#!/bin/bash

SCRIPTDIR=$(readlink -f $(dirname $0))
MBSIMENVDIR=$(readlink -f "$SCRIPTDIR"/../..)

# help
if [ $# -le 0 ]; then
  echo "This script runs the command provided as first argument in the mbsim-env-build Docker image."
  echo "All other arguments are passed to the command running in Docker."
  echo "Examples:"
  echo "$ <path>/mbsd make - runs make in the Docker directory corresponding to the current directory."
  echo "$ <path>/mbsd mbsimxml MBS.mbsimprj.xml - runs the MBSim XML model MBS.mbsimprj.xml in the current directory using mbsimxml."
  echo "..."
  exit 0
fi

# check docker
if ! sudo docker version > /dev/null; then
  echo 'Cannot run docker via sudo. Please install and enable docker via sudo for the current user or'
  echo '(not recommended) run this script as root.'
fi

# convert the absolute path stored in PABS to the corresponding docker path
function convertPABS {
  PCANO=$(readlink -m $PABS)
  if [ "${PCANO:0:${#MBSIMENVDIR}}" == "$MBSIMENVDIR" ]; then
    PABS=/mbsim-env${PCANO:${#MBSIMENVDIR}}
  else
    echo "ERROR: The path $PABS is not a subdir of $MBSIMENVDIR. This cannot be handled by $(basename $0)."
    echo "If you mean a native path in the Docker image prefix this argument with DOCKERDIR:"
    exit 1
  fi
}

# convert cur dir
PABS=$PWD; convertPABS; CURDIR=$PABS

#convert args
ARGS=()
while [ $# -ge 1 ]; do
  if [ "${1:0:1}" == "/" ]; then
    # convert absolute path
    PABS=$1; convertPABS
    ARGS+=("$PABS")
  elif [ "${1:0:10}" == "DOCKERDIR:" ]; then
    ARGS+=("${1:10}")
  else
    # keep everything else
    ARGS+=("$1")
  fi
  shift
done

# run in mbsim-env-build docker image
sudo docker run --rm --user $(id -u):$(id -g) -v "$MBSIMENVDIR":/mbsim-env -w "$CURDIR" -e DISPLAY -v ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority --net=host mbsimenv/mbsim-env-build "${ARGS[@]}"
